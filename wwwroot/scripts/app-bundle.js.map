{"version":3,"sources":["src/app.ts","src/authConfig.ts","src/environment.ts","src/main.ts","src/resources/index.ts","src/components/authentication/login.ts","src/components/corporation/corporations.ts","src/components/corporation/editCorporation.ts","src/components/corporation/newCorporation.ts","src/components/dashboard/dashboard.ts","src/components/dashboard/editForum.ts","src/components/dashboard/newForum.ts","src/components/reaction/reaction.ts","src/components/reaction/reactions.ts","src/components/message/message.ts","src/components/message/messages.ts","src/components/message/newMessage.ts","src/components/software/softwares.ts","src/components/user/editUser.ts","src/components/user/users.ts","src/components/shared/sideBar.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { autoinject } from 'aurelia-framework';\r\nimport { Router, RouterConfiguration, Next, Redirect, NavigationInstruction } from 'aurelia-router'\r\nimport { HttpClient } from 'aurelia-fetch-client';\r\nimport { FetchConfig } from 'aurelia-authentication';\r\nimport { Container } from 'aurelia-dependency-injection';\r\nimport { AuthService } from 'aurelia-authentication';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\nimport * as jwt_decode from 'jwt-decode';\r\n\r\n\r\n@autoinject\r\nexport class App {\r\n    router: Router;\r\n    authenticated: boolean;\r\n    currUrl: string;\r\n    title: string;\r\n\r\n    constructor(private http: HttpClient,\r\n                private config: FetchConfig,\r\n                private authService: AuthService,\r\n                private event: EventAggregator)\r\n    {\r\n        this.configHttp();\r\n        this.authenticated = this.authService.authenticated;\r\n        this.title = this.authService.authenticated ? \"Welkom \" + jwt_decode(this.authService.getAccessToken()).name : \"SFORUM\";\r\n    }\r\n\r\n    configureRouter(config, router) {\r\n        this.router = router;\r\n\r\n        let step = new AuthorizeStep(this.authService);\r\n        config.addAuthorizeStep(step);\r\n\r\n        config.title = 'Aurelia';\r\n        config.map([\r\n            {\r\n                route: ['bericht/:id'],\r\n                name: 'message',\r\n                moduleId: 'components/message/message',\r\n                auth: true\r\n            },\r\n            {\r\n                route: ['berichten/:id/nieuw'],\r\n                name: 'newMessage',\r\n                moduleId: 'components/message/newMessage',\r\n                auth: true\r\n            },\r\n            {\r\n                route: ['berichten/:id'],\r\n                name: 'messages',\r\n                moduleId: 'components/message/messages',\r\n                auth: true\r\n            },\r\n            {\r\n                route: ['corporatie/bewerk/:id'],\r\n                name: 'editCorporation',\r\n                moduleId: 'components/corporation/editCorporation',\r\n                auth: true\r\n            },\r\n            {\r\n                route: ['corporatie/nieuw'],\r\n                name: 'newCorporation',\r\n                moduleId: 'components/corporation/newCorporation',\r\n                auth: true\r\n            },\r\n            {\r\n                route: ['forum/bewerk/:id'],\r\n                name: 'editForum',\r\n                moduleId: 'components/dashboard/editForum',\r\n                auth: true\r\n            },\r\n            {\r\n                route: ['forum/nieuw',],\r\n                name: 'newForum',\r\n                moduleId: 'components/dashboard/newForum',\r\n                auth: true\r\n            },\r\n            {\r\n                route: ['dashboard'],\r\n                name: 'dashboard',\r\n                moduleId: 'components/dashboard/dashboard',\r\n                auth: true\r\n            },\r\n            {\r\n                route: ['corporaties',],\r\n                name: 'corporations',\r\n                moduleId: 'components/corporation/corporations',\r\n                auth: true\r\n            },\n            {\r\n                route: ['gebruiker/bewerk/:id'],\r\n                name: 'editUser',\r\n                moduleId: 'components/user/editUser',\r\n                auth: true\r\n            },\r\n            {\r\n                route: ['gebruikers'],\r\n                name: 'users',\r\n                moduleId: 'components/user/users',\r\n                auth: true\r\n            },\r\n            {\r\n                route: ['software'],\r\n                name: 'softwares',\r\n                moduleId: 'components/software/softwares',\r\n                auth: true\r\n            },\r\n            {\r\n                route: ['/', 'login'],\r\n                name: 'login',\r\n                moduleId: 'components/authentication/login'\r\n            },\r\n        ]);\r\n    }\r\n\r\n    configHttp(): void {\r\n        this.http.configure(config => {\r\n            config\r\n                .withBaseUrl('api/')\r\n                .withDefaults({\r\n                    method: \"POST\",\r\n                    credentials: 'same-origin',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'X-Requested-With': 'Fetch'\r\n                    }\r\n                })\r\n                .withInterceptor({\r\n                    request(request) {\r\n                        console.log(`Requesting ${request.method} ${request.url}`);\r\n                        return request;\r\n                    },\r\n                    response(response: Response) {\r\n                        console.log(`Received ${response.status} ${response.url}`);\r\n                        return response;\r\n                    }\r\n                });\r\n        });\r\n\r\n        this.config.configure(this.http);\r\n    }\r\n\r\n    created(owningView, myView) {\r\n        this.currUrl = window.location.pathname;\r\n    }\r\n\r\n    attached() {\r\n        this.event.subscribe('signedIn', response => {\r\n            this.authenticated = response;\r\n            this.title = \"Welkom \" + jwt_decode(this.authService.getAccessToken()).name;\r\n        });\r\n    }\r\n\r\n    logout() {\r\n        return this.authService.logout()\r\n            .then(() => {\r\n                this.authenticated = this.authService.authenticated;\r\n                this.router.navigate(\"login\");\r\n                this.title = \"SFORUM\";\r\n\r\n                swal({\r\n                    title: \"Bedankt voor uw bezoek\",\r\n                    type: \"success\",\r\n                    showConfirmButton: false,\r\n                    timer: 2000\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\n@autoinject\r\nclass AuthorizeStep {\r\n    constructor(private authService: AuthService) {}\r\n\r\n    run(navigationInstruction: NavigationInstruction, next: Next): Promise<any> {\r\n        if (navigationInstruction.getAllInstructions().some(i => i.config.auth)) {\r\n            let isLoggedIn = this.authService.isAuthenticated();\r\n\r\n            if (!isLoggedIn) {\r\n                return next.cancel(new Redirect('login'));\r\n            }\r\n        }\r\n\r\n        return next();\r\n    }\r\n}\r\n\r\n","var config = {\n    providers: {\n        google: {\n            name: 'google',\n            clientId: '833710645751-q02snmqimmijs2jdk9orckpmfdvi53dt.apps.googleusercontent.com'\n        }\n    }\n}\n\nexport default config;","export default {\n  debug: true,\n  testing: true\n};\n","import { Aurelia } from 'aurelia-framework'\nimport environment from './environment';\nimport config from './authConfig'\n\nexport function configure(aurelia: Aurelia) {\n    aurelia.use\n        .standardConfiguration()\n        .feature('resources')\n        .plugin('aurelia-authentication',\n        (baseConfig) => {\n            baseConfig.configure(config);\n        });\n\n    if (environment.debug) {\n        aurelia.use.developmentLogging();\n    }\n\n    if (environment.testing) {\n        aurelia.use.plugin('aurelia-testing');\n    }\n\n    aurelia.start().then(() => aurelia.setRoot());\n}","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n","import * as swal from 'sweetalert';\r\nimport { autoinject } from \"aurelia-framework\"\r\nimport { HttpClient, json } from \"aurelia-fetch-client\"\r\nimport { AuthService } from \"aurelia-authentication\"\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\nimport { Router } from 'aurelia-router'\r\n\r\n@autoinject\r\nexport class login {\r\n\r\n    email = \"\";\r\n    password = \"\";\r\n\r\n    constructor(private auth: AuthService,\r\n                private http: HttpClient,\r\n                private event: EventAggregator,\r\n                private router: Router) { }\r\n\r\n    login() {\r\n        this.auth.login({\r\n            email: this.email,\r\n            password: this.password\r\n        }).then(response => {\r\n            this.event.publish('signedIn', true);\r\n\r\n            swal({\r\n                title: \"U bent succesvol ingelogd\",\r\n                type: \"success\",\r\n                showConfirmButton: false,\r\n                timer: 2000\r\n            });\r\n\r\n              this.router.navigate(\"dashboard\");\r\n            })\r\n            .catch(err => {\r\n                swal({\r\n                    title: \"Inloggegevens zijn onjuist\",\r\n                    type: \"warning\",\r\n                    showCancelButton: true,\r\n                    showConfirmButton: false,\r\n                    closeOnConfirm: true\r\n                });\r\n            });\r\n    }\r\n\r\n    logout() {\r\n        this.auth.logout('');\r\n    }\r\n\r\n    async test() {\r\n\r\n    }\r\n} ","import { HttpClient, json } from \"aurelia-fetch-client\"\r\nimport { autoinject } from \"aurelia-framework\"\r\nimport { Router } from 'aurelia-router'\r\n\r\n@autoinject\r\nexport class corporations {\r\n\r\n    corporations = [];\r\n\r\n\r\n    constructor(private http: HttpClient, private router: Router) {\r\n        this.fetchCorporations();\r\n    }\r\n\r\n    fetchCorporations() {\r\n        this.http.fetch('corporation/index')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.corporations = data;\r\n            });\r\n    }\r\n\r\n    destroy(event, forum) {\r\n        event.stopPropagation();\r\n        swal({\r\n            title: 'Weet u het zeker?',\r\n            type: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Ja verwijder deze corporatie',\r\n            cancelButtonText: 'Stop!',\r\n            confirmButtonColor: '#002e5b',\r\n        }, (isOk) => {\r\n            if (isOk) {\r\n                this.http.fetch('corporation/destroy', {\r\n                    body: json(forum)\r\n                }).then(data => {\r\n                    this.corporations = this.corporations.filter((obj) => obj.id != forum.id);\r\n\r\n                    swal({\r\n                        title: 'Verwijderd',\r\n                        text: 'Corporatie is succesvol verwijderd',\r\n                        type: 'success',\r\n                        showConfirmButton: false,\r\n                        timer: 3000\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    editUrl(event, corporation) {\r\n        event.stopPropagation();\r\n        this.router.navigate(\"corporatie/bewerk/\" + corporation.id);\r\n    }\r\n}","import { HttpClient, json } from \"aurelia-fetch-client\"\r\nimport { autoinject } from \"aurelia-framework\"\r\nimport { Router } from 'aurelia-router'\r\n\r\n@autoinject\r\nexport class editCorporation {\r\n\r\n    corporation: {}\r\n\r\n    constructor(private http: HttpClient, private router: Router) {}\r\n\r\n    created() {\r\n        this.getCorporation();\r\n    }\r\n\r\n    getCorporation() {\r\n        this.http.fetch('corporation/show', {\r\n            body: json(this.router.currentInstruction.params.id)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.corporation = data;\r\n            });\r\n    }\r\n\r\n    update() {\r\n        this.http.fetch('corporation/update', {\r\n            body: json(this.corporation)\r\n        }).then(response => {\r\n            if (response.status == 200) {\r\n                swal({\r\n                    title: \"Corporatie succesvol geupdatet\",\r\n                    type: \"success\",\r\n                    showConfirmButton: false,\r\n                    timer: 2000\r\n                });\r\n\r\n                this.router.navigate(\"corporaties\");\r\n            }\r\n        });\r\n    }\r\n}","import { HttpClient, json } from \"aurelia-fetch-client\"\r\nimport { autoinject } from \"aurelia-framework\"\r\nimport { Router } from 'aurelia-router'\r\n\r\n@autoinject\r\nexport class newCorporation {\r\n\r\n    corporation: {}\r\n\r\n    constructor(private http: HttpClient, private router: Router) { }\r\n\r\n    store() {\r\n        this.http.fetch('corporation/store', {\r\n            body: json(this.corporation)\r\n        }).then(response => {\r\n            if (response.status == 200) {\r\n                swal({\r\n                    title: \"Corporatie succesvol aangemaakt\",\r\n                    type: \"success\",\r\n                    showConfirmButton: false,\r\n                    timer: 2000\r\n                });\r\n\r\n                this.router.navigate(\"corporaties\");\r\n            }\r\n        });\r\n    }\r\n}","import { HttpClient, json } from \"aurelia-fetch-client\"\r\nimport { autoinject } from \"aurelia-framework\"\r\nimport { Router } from 'aurelia-router'\r\n\r\n@autoinject\r\nexport class dashboard {\r\n\r\n    public forums: ForumModel[] = [];\r\n\r\n    constructor(private http: HttpClient, private router: Router) {\r\n        this.fetchForums();\r\n    }\r\n\r\n    fetchForums() {\r\n        this.http.fetch('forum/index')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.forums = data;\r\n            });\r\n    }\r\n\r\n    destroy(event, forum) {\r\n        event.stopPropagation();\r\n        swal({\r\n            title: 'Weet u het zeker?',\r\n            type: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Ja verwijder dit forum',\r\n            cancelButtonText: 'Stop!',\r\n            confirmButtonColor: '#002e5b',\r\n        }, (isOk) => {\r\n            if (isOk) {\r\n                this.http.fetch('forum/destroy', {\r\n                    body: json(forum)\r\n                }).then(data => {\r\n                    this.forums = this.forums.filter((obj) => obj.id != forum.id);\r\n\r\n                    swal({\r\n                        title: 'Verwijderd',\r\n                        text: 'Het forum is succesvol verwijderd',\r\n                        type: 'success',\r\n                        showConfirmButton: false,\r\n                        timer: 3000\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    link(forum) {\r\n        event.stopPropagation();\r\n        this.router.navigate(\"berichten/\" + forum.id);\r\n    }\r\n\r\n    editUrl(event, forum) {\r\n        event.stopPropagation();\r\n        this.router.navigate(\"forum/bewerk/\" + forum.id);\r\n    }\r\n\r\n    isEmpty(forums) {\r\n        return forums == [];\r\n    }\r\n}\r\n\r\nexport class ForumModel {\r\n    id: number;\r\n    name: string;\r\n    description: string;\r\n}\r\n\r\n","import { HttpClient, json } from \"aurelia-fetch-client\"\r\nimport { autoinject } from \"aurelia-framework\"\r\nimport { Router } from 'aurelia-router'\r\n\r\n@autoinject\r\nexport class editForum {\r\n\r\n    public forum = new Forum();\r\n\r\n    constructor(private http: HttpClient, private router: Router) {}\r\n\r\n    created() {\r\n        this.getForum();\r\n    }\r\n\r\n    getForum() {\r\n        this.http.fetch('forum/show', {\r\n            body: json(this.router.currentInstruction.params.id)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.forum = data;\r\n            });\r\n    }\r\n\r\n    update() {\r\n        this.http.fetch('forum/update', {\r\n            body: json(this.forum)\r\n        }).then(response => {\r\n            if (response.status == 200) {\r\n                swal({\r\n                    title: \"Forum succesvol geupdatet\",\r\n                    type: \"success\",\r\n                    showConfirmButton: false,\r\n                    timer: 2000\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\n\nexport class Forum {\n    id: number;\n    name: string;\n    description: string;\r\n}","import { HttpClient, json } from \"aurelia-fetch-client\"\r\nimport { autoinject } from \"aurelia-framework\"\r\n\r\n@autoinject\r\nexport class newForum {\r\n\r\n    forum: { name: \"\", description: \"\" };\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    store() {\r\n        this.http.fetch('forum/store', {\r\n                body: json(this.forum)\r\n            }).then(response => {\r\n              if (response.status == 200) {\r\n                  swal({\r\n                      title: \"Forum succesvol aangemaakt\",\r\n                      type: \"success\",\r\n                      showConfirmButton: false,\r\n                      timer: 2000\r\n                  });\r\n\r\n                  this.forum.name = \"\";\r\n                  this.forum.description = \"\";\r\n              }          \r\n        });\r\n    }\r\n}","import { bindable } from 'aurelia-framework';\r\nimport { HttpClient, json } from \"aurelia-fetch-client\"\r\nimport { autoinject } from \"aurelia-framework\"\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\n\r\n@autoinject\r\nexport class reaction {\r\n    @bindable reaction;\r\n\r\n    editing: boolean;\r\n\r\n    constructor(private http: HttpClient, public event: EventAggregator) {\r\n        this.editing = false;\r\n    }    \r\n\r\n\r\n    destroy() {\r\n        swal({\r\n            title: 'Weet u het zeker?',\r\n            type: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Ja verwijder deze reactie',\r\n            cancelButtonText: 'Stop!',\r\n            confirmButtonColor: '#002e5b',\r\n        }, (isOk) => {\r\n            if (isOk) {\r\n                this.http.fetch('reaction/destroy', {\r\n                    body: json(this.reaction)\r\n                }).then(data => {\r\n                    swal({\r\n                        title: 'Verwijderd',\r\n                        text: 'De reactie is succesvol verwijderd',\r\n                        type: 'success',\r\n                        showConfirmButton: false,\r\n                        timer: 3000\r\n                    });\r\n\r\n                    this.event.publish('destroy-reaction', this.reaction);\r\n                });\r\n            }\r\n        });\r\n    }\n\n    update() {\r\n        this.http.fetch('reaction/update', {\r\n            body: json(this.reaction)\r\n        })\r\n            .then(response => {\r\n                if (response.status == 200) {\r\n                    swal({\r\n                        title: \"Reactie succesvol geupdatet\",\r\n                        type: \"success\",\r\n                        showConfirmButton: false,\r\n                        timer: 2000\r\n                    });\r\n                }\r\n\n                this.editing = false;\r\n            });\r\n    }\r\n}","import { bindable } from 'aurelia-framework';\r\nimport { autoinject } from \"aurelia-framework\"\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\n\n@autoinject\nexport class reactions {\n    @bindable reactions;\n\n    constructor(public event: EventAggregator) {}  \n\n    attached() {\r\n        this.event.subscribe('destroy-reaction', response => {\r\n            this.reactions = this.reactions.filter(reaction => reaction.id != response.id);\r\n        });\r\n    }\r\n}","import { HttpClient, json } from \"aurelia-fetch-client\"\r\nimport { autoinject } from \"aurelia-framework\"\r\nimport { Router } from 'aurelia-router'\r\n\r\n@autoinject\r\nexport class message {\r\n\r\n    message: {  reactions: Reaction[], id: \"\" };\r\n    editing: boolean;\r\n    reaction = new Reaction;\r\n\r\n    constructor(private http: HttpClient, private router: Router) {\r\n        this.editing = false;\r\n    }\r\n\r\n    created() {\r\n        this.getMessage();\r\n    }\r\n\r\n    async activate(params) {\r\n        this.reaction.message_id = params.id;\r\n    }\r\n\r\n    getMessage() {\r\n        this.http.fetch('message/show', {\r\n            body: json(this.router.currentInstruction.params.id)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.message = data;\r\n            });\r\n    }\r\n\r\n    update() {\r\n        this.http.fetch('message/update', {\r\n            body: json(this.message)\r\n        })\r\n            .then(response => {\r\n                if (response.status == 200) {\r\n                    swal({\r\n                        title: \"Bericht succesvol geupdatet\",\r\n                        type: \"success\",\r\n                        showConfirmButton: false,\r\n                        timer: 2000\r\n                    });\r\n                }\r\n\r\n                this.editing = false;\r\n            });\r\n    }\r\n\r\n    destroy() {\r\n        swal({\r\n            title: 'Weet u het zeker?',\r\n            type: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Ja verwijder dit bericht',\r\n            cancelButtonText: 'Stop!',\r\n            confirmButtonColor: '#002e5b',\r\n        }, (isOk) => {\r\n            if (isOk) {\r\n                this.http.fetch('message/destroy', {\r\n                    body: json(this.message)\r\n                }).then(data => {\r\n                    swal({\r\n                        title: 'Verwijderd',\r\n                        text: 'Het bericht is succesvol verwijderd',\r\n                        type: 'success',\r\n                        showConfirmButton: false,\r\n                        timer: 3000\r\n                    });\r\n                });\r\n\r\n                this.router.navigate(\"/dashboard\");\r\n            }\r\n        });\r\n    }\r\n\r\n    post() {\r\n        this.http.fetch('reaction/store', {\r\n            body: json(this.reaction)\r\n        }).then(response => response.json())\r\n            .then(data => {\n                swal({\r\n                    title: \"Reactie succesvol aangemaakt\",\r\n                    type: \"success\",\r\n                    showConfirmButton: false,\r\n                    timer: 2000\r\n                });\n\n                console.log(data);\r\n                this.message.reactions.push(data);\r\n            });\r\n    }\r\n}\r\n\r\nexport class Reaction {\r\n    message_id: number;\r\n    account_id: number;\r\n    reaction: string;\r\n}","import { HttpClient, json } from \"aurelia-fetch-client\"\r\nimport { autoinject } from \"aurelia-framework\"\r\nimport { Router } from 'aurelia-router'\r\n\r\n@autoinject\r\nexport class messages {\r\n\r\n    public messages: MessageModel[] = [];\r\n    public forumId: number;\r\n\r\n    constructor(private http: HttpClient, private router: Router) {}\r\n\r\n    created() {\r\n        this.forumId = this.router.currentInstruction.params.id;\r\n        this.fetchMessages();\r\n    }\r\n\r\n    fetchMessages() {\r\n        this.http.fetch('message/index', {\r\n              body: json(this.forumId)\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.messages = data;\r\n            });\r\n    }\r\n\r\n    isEmpty(messages) {\r\n        return messages == [];\r\n    }\r\n\r\n    link(message) {\r\n        this.router.navigate(\"bericht/\" + message.id);\r\n    }\r\n}\r\n\r\nexport class MessageModel {\r\n    id: number;\r\n    forum: string;\r\n    user: string;\r\n    software: string;\r\n    subject: string;\r\n    message: string;\r\n}\r\n\r\n\r\n","import { HttpClient, json } from \"aurelia-fetch-client\"\r\nimport * as jwt_decode from 'jwt-decode';\r\nimport { autoinject } from \"aurelia-framework\"\r\nimport { Router } from 'aurelia-router'\r\nimport { AuthService } from 'aurelia-authentication';\r\n\r\n@autoinject\r\nexport class newMessage {\r\n\r\n    public message = new Message();\r\n    public softwares: Software[] = [];\r\n\r\n    constructor(private http: HttpClient, private router: Router, private authService: AuthService) {\r\n        this.fetchSoftware();\r\n    }\r\n\r\n    fetchSoftware() {\r\n        this.http.fetch('software/index', {\r\n                body: json(jwt_decode(this.authService.getAccessToken()).corporation_id)\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.softwares = data;\r\n            });\r\n    }\r\n\r\n    store() {\n        this.message.forum = this.router.currentInstruction.params.id;\n\r\n        this.http.fetch('message/store', {\r\n            body: json(this.message)\r\n        }).then(response => {\r\n            if (response.status == 200) {\r\n                swal({\r\n                    title: \"Bericht succesvol aangemaakt\",\r\n                    type: \"success\",\r\n                    showConfirmButton: false,\r\n                    timer: 2000\r\n                });\r\n\r\n                this.router.navigate(\"berichten/\" + this.router.currentInstruction.params.id);\r\n              }\r\n        });\r\n    }\r\n}\r\n\r\nexport class Software {\r\n    corporation_id: number;\r\n    name: string;\r\n}\n\nexport class Message {\n    id: number;\r\n    message: string;\n    subject: string;\n    forum: number;\n    software: number;\r\n}\r\n\r\n\r\n\r\n\r\n","import { HttpClient, json } from \"aurelia-fetch-client\"\r\nimport { autoinject } from \"aurelia-framework\"\r\nimport { AuthService } from 'aurelia-authentication';\r\nimport * as jwt_decode from 'jwt-decode';\r\n\r\n@autoinject\r\nexport class softwares {\r\n\r\n    public softwares: SoftwareModel[] = [];\r\n\r\n    constructor(private http: HttpClient, private authService: AuthService) {\r\n        this.fetchSoftwares();\r\n    }\r\n\r\n    fetchSoftwares() {\r\n        this.http.fetch('software/index', {\r\n                body: json(jwt_decode(this.authService.getAccessToken()).corporation_id)\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.softwares = data;\r\n            });\r\n    }\r\n\r\n    destroy(event, software) {\n        event.stopPropagation();\n\n        swal({\r\n            title: 'Weet u het zeker?',\r\n            type: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Ja verwijder deze software',\r\n            cancelButtonText: 'Stop!',\r\n            confirmButtonColor: '#002e5b',\r\n        }, (ok) => {\n            if (ok) {\n                console.log(software);\r\n\n                this.http.fetch('software/destroy', {\n                    body: json(software)\n                }).then(response => {\n                    if (response.status === 200) {\n                        this.softwares = this.softwares.filter((obj) => obj.id != software.id);\n\r\n                        swal({\r\n                            title: 'Verwijderd',\r\n                            text: 'Software is succesvol verwijderd',\r\n                            type: 'success',\r\n                            showConfirmButton: false,\r\n                        });\r\n                    }\r\n                });\r\n            }        \r\n        });\r\n    }\r\n}\n\nexport class SoftwareModel {\r\n    id: number;\r\n    name: string;\r\n    corporation_id: number;\n    corporation: string\r\n}\r\n\n\r\n\r\n\r\n","import { HttpClient, json } from \"aurelia-fetch-client\"\r\nimport * as jwt_decode from 'jwt-decode';\r\nimport { autoinject } from \"aurelia-framework\"\r\nimport { Router } from 'aurelia-router'\r\nimport { AuthService } from 'aurelia-authentication';\r\n\r\n@autoinject\r\nexport class editUser {\r\n\r\n    public corporations: Corporation[] = [];\n    public user: {};\r\n\r\n    constructor(private http: HttpClient, private router: Router, private authService: AuthService) {}\n\n    created() {\n        this.fetchCorporations();\r\n        this.getUser();\r\n    }\n\n    getUser() {\r\n        this.http.fetch('user/show', {\r\n            body: json(this.router.currentInstruction.params.id)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.user = data;\r\n            });\r\n    }\n\n    fetchCorporations() {\n        this.http.fetch('corporation/index', {\r\n            body: json(jwt_decode(this.authService.getAccessToken()).corporation_id)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\n                console.log(data);\r\n                this.corporations = data;\r\n            });\r\n    }\n\n    update() {\r\n        this.http.fetch('user/update', {\r\n            body: json(this.user)\r\n        }).then(response => {\r\n            if (response.status == 200) {\r\n                swal({\r\n                    title: \"Gebruiker succesvol geupdatet\",\r\n                    type: \"success\",\r\n                    showConfirmButton: false,\r\n                    timer: 2000\r\n                });\r\n            }\r\n        });\r\n    }\n}\n\nexport class Corporation {\n    id: number;\n    name: string;\n    email: string;\n    address: string;\n    zip: string;\r\n}","import { HttpClient, json } from \"aurelia-fetch-client\"\r\nimport { autoinject } from \"aurelia-framework\"\r\nimport { Router } from 'aurelia-router'\r\n\r\n@autoinject\r\nexport class users {\r\n\r\n    users = [];\r\n\r\n    constructor(private http: HttpClient, private router: Router) {\r\n        this.fetchUsers();\r\n    }\r\n\r\n    fetchUsers() {\r\n        this.http.fetch('user/index')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.users = data;\r\n            });\r\n    }\r\n\r\n    destroy(event, user) {\n        event.stopPropagation();\n\n        swal({\r\n            title: 'Weet u het zeker?',\r\n            type: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Ja verwijder deze gebruiker',\r\n            cancelButtonText: 'Stop!',\r\n            confirmButtonColor: '#002e5b',\r\n        }, (ok) => {\n            if (ok) {\n                this.http.fetch('user/destroy', {\n                    body: json(user)\n                })\n                    .then(data => {\r\n                        swal({\r\n                            title: 'Verwijderd',\r\n                            text: 'Gebruiker is succesvol verwijderd',\r\n                            type: 'success',\r\n                            showConfirmButton: false,\r\n                        });\n\n                        this.users = this.users.filter((obj) => obj.id != user.id);\r\n                    });\r\n            }         \r\n        });\r\n    }\n\n    editUrl(event, user) {\r\n        event.stopPropagation();\r\n        this.router.navigate(\"gebruiker/bewerk/\" + user.id);\r\n    }\r\n}\r\n\r\n","export class sideBar {}"],"sourceRoot":"../.."}